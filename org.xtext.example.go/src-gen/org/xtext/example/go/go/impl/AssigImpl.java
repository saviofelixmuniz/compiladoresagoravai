/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.go.go.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.go.go.Assig;
import org.xtext.example.go.go.GoPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Assig</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.go.go.impl.AssigImpl#getId <em>Id</em>}</li>
 *   <li>{@link org.xtext.example.go.go.impl.AssigImpl#getIdl <em>Idl</em>}</li>
 *   <li>{@link org.xtext.example.go.go.impl.AssigImpl#getExpression <em>Expression</em>}</li>
 *   <li>{@link org.xtext.example.go.go.impl.AssigImpl#getExpressionlist <em>Expressionlist</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AssigImpl extends SimpleStmtImpl implements Assig
{
  /**
   * The default value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected static final String ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected String id = ID_EDEFAULT;

  /**
   * The default value of the '{@link #getIdl() <em>Idl</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdl()
   * @generated
   * @ordered
   */
  protected static final String IDL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIdl() <em>Idl</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdl()
   * @generated
   * @ordered
   */
  protected String idl = IDL_EDEFAULT;

  /**
   * The default value of the '{@link #getExpression() <em>Expression</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected static final String EXPRESSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getExpression() <em>Expression</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected String expression = EXPRESSION_EDEFAULT;

  /**
   * The default value of the '{@link #getExpressionlist() <em>Expressionlist</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpressionlist()
   * @generated
   * @ordered
   */
  protected static final String EXPRESSIONLIST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getExpressionlist() <em>Expressionlist</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpressionlist()
   * @generated
   * @ordered
   */
  protected String expressionlist = EXPRESSIONLIST_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AssigImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.ASSIG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setId(String newId)
  {
    String oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.ASSIG__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getIdl()
  {
    return idl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIdl(String newIdl)
  {
    String oldIdl = idl;
    idl = newIdl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.ASSIG__IDL, oldIdl, idl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getExpression()
  {
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpression(String newExpression)
  {
    String oldExpression = expression;
    expression = newExpression;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.ASSIG__EXPRESSION, oldExpression, expression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getExpressionlist()
  {
    return expressionlist;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpressionlist(String newExpressionlist)
  {
    String oldExpressionlist = expressionlist;
    expressionlist = newExpressionlist;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.ASSIG__EXPRESSIONLIST, oldExpressionlist, expressionlist));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.ASSIG__ID:
        return getId();
      case GoPackage.ASSIG__IDL:
        return getIdl();
      case GoPackage.ASSIG__EXPRESSION:
        return getExpression();
      case GoPackage.ASSIG__EXPRESSIONLIST:
        return getExpressionlist();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.ASSIG__ID:
        setId((String)newValue);
        return;
      case GoPackage.ASSIG__IDL:
        setIdl((String)newValue);
        return;
      case GoPackage.ASSIG__EXPRESSION:
        setExpression((String)newValue);
        return;
      case GoPackage.ASSIG__EXPRESSIONLIST:
        setExpressionlist((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.ASSIG__ID:
        setId(ID_EDEFAULT);
        return;
      case GoPackage.ASSIG__IDL:
        setIdl(IDL_EDEFAULT);
        return;
      case GoPackage.ASSIG__EXPRESSION:
        setExpression(EXPRESSION_EDEFAULT);
        return;
      case GoPackage.ASSIG__EXPRESSIONLIST:
        setExpressionlist(EXPRESSIONLIST_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.ASSIG__ID:
        return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
      case GoPackage.ASSIG__IDL:
        return IDL_EDEFAULT == null ? idl != null : !IDL_EDEFAULT.equals(idl);
      case GoPackage.ASSIG__EXPRESSION:
        return EXPRESSION_EDEFAULT == null ? expression != null : !EXPRESSION_EDEFAULT.equals(expression);
      case GoPackage.ASSIG__EXPRESSIONLIST:
        return EXPRESSIONLIST_EDEFAULT == null ? expressionlist != null : !EXPRESSIONLIST_EDEFAULT.equals(expressionlist);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (id: ");
    result.append(id);
    result.append(", idl: ");
    result.append(idl);
    result.append(", expression: ");
    result.append(expression);
    result.append(", expressionlist: ");
    result.append(expressionlist);
    result.append(')');
    return result.toString();
  }

} //AssigImpl
